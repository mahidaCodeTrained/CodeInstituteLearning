
/*This is the start of learning Cascading Style Sheets which is the term for CSS. The stylish language that helps visually improve HTML webpages.*/

/*CSS is concerned with making the look of a website and it follows a set rule in doing so. 
"{           }" are always used when making anything in CSS. In addition a colon and semi colon are prevelant as a declaration of CSS.-->

<!--In CSS if you want to target specific elements and give it their own unique style from the rest of the webpage then you
     need to provide it an ID selector, (#) this allows you to call upon the id in the body of the element whilst styling that specific ID
    through CSS in the head element or in a different style sheet that you link in the head element.-->*/

    #myElement {
   color: teal;
font-family: New Times Roman;
    }
    <!--This CSS code above ^ styles an ID called "myElement" and whenever this id is now called upon in the body it will give it an element a specific style.-->
    <p id="#myElement">This is how it is done.</p>

    /*This <p> element now will show in teal and have a font of new times roman.*/
    
    /*If you have a group of elements on a webpage that are very similar to eachother then you can semantically group them together
    with a class selector. In CSS a class selector is (.) a dot. The selectors name matches the class attribute's value. */

    .myElement {
   color: green;
    font-family: Arial;
    }
   
    /*This is an example of a class selector. The . period replaces the #.*/

   /*It is important to remember that in CSS there is an order to the way you do things. 
   You have to write your code in specific ways to target specific elements at a specific time. 
   What I mean by this is that it must follow a rule that the elder descendant element must always go infront of the child.
   This ensures that a set rule based on the elements cannont be overturned however can be modified based on the rulings you set. */

   1. CSS can be imported.
   2. CSS style can be used via the <style> element in the <head> of a <html> document.
   3. CSS can be done on an external file which you import via <link> element.

   h1 {
    /* 
      "h1" is the selector
      "text-align" is property
      "center" is value of the property
    */
    text-align: center;
  }

   /*The class selector in CSS is just the element that is being changed with CSS. ^ In the above example he <h1> element is the selector.
    /* p is the type selector */
    p {
      color: red;	
   }
 </style>
</head>
<body>
/*All paragraphs will have a red text color*/
<p>paragraph 1</p>
<p>paragraph 2</p>
<p>paragraph 3</p>
<p>paragraph 4</p>
<p>paragraph 5</p>
</body>

   /*We can use more than one class selector on an element in CSS by seperating them within the quotes ("). For example.... */
   
   <div class="dimensions color-palette"></div>   /*This element now uses two class selectors "dimensons" and "color-palette"*/

   /*However, an ID selector as we stated before is completely unqiue and the id that is created should ever only be subject to being on a single element not multiple.
   It gives that element a sense of uniqueness in the webpage and it should stand out from the rest.

  */---------------------------------------------------------------------------------------------------------------------------------------------------------------------------/*

  It is important to note that attributes can also be stylised with CSS. The example code below provides the template on how to modify and change the apperance of attributes.*/

  <title>Attribute selectors</title>
  <style>

    input[type=password] {
        background-color: lightgreen;
    }

    a[target=_blank]{
        color: red;
        font-weight: bold;
    }

    /*A CSS pseudo-class is a keyword added to a selector that specifies a specific state of the selected element or elements.
     The psuedo-class is called for by a : colon. It allows CSS to style external factors such as the history of navigation and status of a documents content.
     For example, if you have clicked on a checkbox or have hovered over something. :checked :hover :focus are pesudo classes called upon very commonly.
                                                        EXAMPLE */

                                                        button:hover {color:blue}
                                                       [/*Selector]
  
    ==============================================================================================================================================================================*/

    /*The DOM */
     
  /*The "D O M" represents the Document Object Model. This model represents each of the HTML elements on a page and their relationships to each other.
  The greater than symbol > on a line of code in the selector indicates the relationship that is in place in the code. For example if a <p> is a child of a section element,
  and you wanted to target all of the <p's> that are direct children of the section element throughout the code (WITHOUT) targeting all of the general <p> elements then the code 
  would look like this.... */
  
  section > p {
    color:blue;
    font-family: Arial, Helvetica, sans-serif;
  }

  /*These ^ p's that are within section elements as direct children will now be blue in text and their font will be Arial. */

  /*If you wanted to target desecendents of elements which aren't direct children then you would target them in the same way but without the greater
  than symbol. You would write your code like this, if for example the section had a child element such as a article that had a child <p> inside of it. .....*/

  section p {

    color:aquamarine;
    font-family: 'Times New Roman', Times, serif;
    background-color: chocolate;
  }
  /*Therefore, all of the p elements that are not direct children but descendents that are nested within the <section> element will all have a aqaumarine coloured text,
  a font of Times New Roman and a background color of chocolate. It is also important to note that you can add more than two selectors when talking about descendants. 
  If you have a <p> element that is a child of the <aside> element which is a child of a <section> element and you wanted to target all the <p>'s that are children of <asides>,
  which are children of <sections> in your text then the code will be written like this. CHECK THESE 3 EXAMPLES BELOW. */

               section aside p {                             /*This will apply to all p elements inside aside which are inside sections.*/
                    color:aqua;
                    background-color: brown;
                
               }                                     
                                                          aside p {             /*This will apply to all p elements inside <aside> elements */
                                                            color:aqua;
                                                            background-color: brown;
                                                          }
                                                                                                             p {      /*This will apply to all p elements in the code.*/
                                                                                                              color:aqua;
                                                                                                              background-color: brown;
                                                                                                             }

/*Sibling selectors in CSS code is a little bit different. Instead of using either a comma, between selectors which allows them to share the same styles without using classes.
A sibling selector will use a ~ symbol in between the selectors. For example if you have a code with...*/


<style>
<div>div1</div>                                       
<div>div2</div>                                              
<header>heading</header>                                     
<p>a p</p
<div>div3</div>
<div>div4</div>

</style>

/* If i used... */
header ~ div {
  color:blue;
  background-color:brown;            /*This would then apply to all div elements that are younger siblings of the header element as well as the header itself. 
                                        However it will not be applied to the div elements that came before because they are older siblings. */
}


/*===============================================================================================================================================================================*/
/*Lets now take a look at how CSS can be used in a html document. These are the three different places you can write CSS for HTML. There is inlined, embedded or External CSS.

Inline styling is like this inside the html code:*/ <h1 style="color:blue; background: blue;"> /*The CSS is inlined into the HTML code. */
 /*Inline CSS is often used for debugging. It is much faster and easier to change a style quickly in a debugging program like Chrome Developer Tools and see the results 
immediately in the browser than to change the source file.

Inline CSS is also used in emails. External files are not loaded into email templates, and so inline styles are beneficial. 
Inline CSS has the highest level of specificity, so using it will override other CSS rules for an element.*/


/*Embedded styling is done inside the <head> element in the page using a <style> element to create your CSS, an example would be all the code we have done above. 
It is important to note that this style of CSS has it's limitations as if you have more than one webpage, the styling would have to be completed on every single one and 
if you have any changes then you would have to change it seperately on each document. */


/*External CSS is CSS that is created in another file which is them embedded into the <head> element using a link element. EXAMPLE */
<link href="style.css" rel="stylesheet">   /*The href link links the external file where the CSS is kept. The rel attribute allows the computer to know it's a stylesheet. 

This is extremely useful for developers as files of CSS and JavaScript are usually done in seperate files to make sure
that the code is easy to read and follow for other develkopers that are wishing to work n the code maybe in opensource or in a job role. 
This is called: Seperation of Concerns. */

/*It is important to note that CSS reads program from top to bottom so any declaration of a CSS rule twice (one on top of the page and one on the bottom)
CSS will override the one on the top with the more recent one on the bottom.


CSS can be very specfic. For example a class selector will always override a element selector whereas, an ID selector will override both of them.

properties can also be inherited from parent to child in CSS. */
<p style="border: solid 1px red; color: red;">
  This is a paragraph
  <span>with a span nested inside it</span>
</p>